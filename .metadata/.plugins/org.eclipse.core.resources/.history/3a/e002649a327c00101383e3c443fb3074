package org.jsonPlaceholder.JSONPlaceholderAPITesting;
import io.restassured.RestAssured;
import io.restassured.common.mapper.TypeRef;
import io.restassured.response.Response;
import io.restassured.*;
import static io.restassured.RestAssured.given;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.testng.annotations.Test;


public class SampleAPITesting {
	
	String url = "https://jsonplaceholder.typicode.com";
	String postsEndpoint = "/posts";
	String usersEndpoint = "/users";
	List<Map<String,Object>> data;
	@Test
	public Response getResponse(String endpoint) {
		RestAssured.baseURI = url;
		Response res = given().header("Accept-Language", "en").when().get(endpoint).then().extract().response();
		return res;
	}
	
	@Test
	public void getPosts() {
		
		String postsData = getResponse(postsEndpoint).then().extract().body().asString();
		List<PostsData> jsonData = getResponse(postsEndpoint).as(new TypeRef<List<PostsData>>() {});
		List<Map<String,Object>> data = new ArrayList<>();
		
		for(PostsData d: jsonData) {
			Map<String,Object> object = new LinkedHashMap<>();
			object.put("userId", d.getUserId());
			object.put("id", d.getId());
			object.put("title", d.getTitle());
			object.put("body", d.getBody());
			data.add(object);
		}
		System.out.println(postsData);
	}
	
	@Test
	public void validateResponseStatusCode() {
		getResponse(postsEndpoint).then().assertThat().statusCode(200);
	}
}
