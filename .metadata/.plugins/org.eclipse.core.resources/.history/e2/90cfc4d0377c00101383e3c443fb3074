package org.jsonPlaceholder.JSONPlaceholderAPITesting;
import io.restassured.RestAssured;
import io.restassured.common.mapper.TypeRef;
import io.restassured.response.Response;
import io.restassured.*;
import static io.restassured.RestAssured.given;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.testng.annotations.Test;


public class SampleAPITesting {
	
	String url = "https://jsonplaceholder.typicode.com";
	String postsEndpoint = "/posts";
	String usersEndpoint = "/users";
	List<Map<String,Object>> postsData;
	List<Map<String,Object>> usersData;
	@Test
	public Response getResponse(String endpoint) {
		RestAssured.baseURI = url;
		Response res = given().header("Accept-Language", "en").when().get(endpoint).then().extract().response();
		return res;
	}
	
	@Test
	public void getPosts() {
		
		List<PostsData> jsonData = getResponse(postsEndpoint).as(new TypeRef<List<PostsData>>() {});
		postsData = new ArrayList<>();
		
		for(PostsData d: jsonData) {
			Map<String,Object> object = new LinkedHashMap<>();
			object.put("userId", d.getUserId());
			object.put("id", d.getId());
			object.put("title", d.getTitle());
			object.put("body", d.getBody());
			postsData.add(object);
		}
		System.out.println(postsData.get(3));
	}
	
	@Test
	public void validateResponseStatusCode() {
		getResponse(postsEndpoint).then().assertThat().statusCode(200);
	}
	
	@Test
	public void getUsers() {
		List<usersData> jsonData = getResponse(usersEndpoint).as(new TypeRef<List<usersData>>() {});
		usersData = new ArrayList<>();
		
		for(usersData u: jsonData) {
			Map<String,Object> object = new LinkedHashMap<>();
			object.put("id", u.getId());
			object.put("name", u.getName());
			object.put("username", u.getUsername());
			object.put("email", u.getEmail());
			object.put("address", u.getAddress());
			object.put("phone", u.getPhone());
			object.put("website", u.getWebsite());
			object.put("company", u.getCompany());
			object.put("companyName", u.getCompany().getName());
			object.put("companyBs", u.getCompany().getBs());
			usersData.add(object);
		}
		
		System.out.println(usersData.get(2));
		
	}
}
